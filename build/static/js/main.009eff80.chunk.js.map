{"version":3,"sources":["components/Feedback/FeedbackOptions.module.css","components/Statistics/Statistics.js","components/Feedback/FeedbackOptions.js","components/Section.js","components/Notification.js","components/App.js","index.js","components/Statistics/Statistics.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","posPerc","className","styles","list","ButtonControls","options","onLeaveFeedback","type","onClick","button","Section","title","children","defaultProps","Notification","message","Feedback","state","handleUpdate","setState","prevState","countTotalFeedback","Object","values","reduce","amount","countPositiveFeedbackPercentage","posValues","Math","round","this","FeedbackOptions","Component","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,kC,kKCyBZC,EAtBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,QAA9B,OACjB,oCACGD,EAAQ,GACP,wBAAIE,UAAWC,IAAOC,MACpB,qCAAWP,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYC,GACZ,kDAAwBC,EAAxB,Q,gBC6BOI,EArCQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACrB,6BACE,4BACEC,KAAK,SACLC,QAAS,WACPF,EAAgBD,EAAQT,OAE1BK,UAAWC,IAAOO,QALpB,QASA,4BACEF,KAAK,SACLC,QAAS,WACPF,EAAgBD,EAAQR,UAE1BI,UAAWC,IAAOO,QALpB,WASA,4BACEF,KAAK,SACLC,QAAS,WACPF,EAAgBD,EAAQP,MAE1BG,UAAWC,IAAOO,QALpB,SCrBEC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACGD,GAAS,4BAAKA,GACdC,IAKPF,EAAQG,aAAe,CACrBF,MAAO,IAQMD,QClBTI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAShB,EAAZ,EAAYA,MAAZ,OACnB,oCAAa,IAAVA,GAAe,4BAAKgB,KAGzBD,EAAaD,aAAe,CAC1Bd,MAAO,GAOMe,QCTME,E,4MAGnBC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,aAAe,SAAAX,GACb,EAAKY,UAAS,SAAAC,GACZ,OAAO,eACJb,EAAOa,EAAUb,GAAQ,O,EAKhCc,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACzB,EAAO0B,GAAR,OAAmB1B,EAAQ0B,M,EAGrEC,gCAAkC,SAAC3B,EAAO4B,GACxC,OAAiB,IAAV5B,EAAc,EAAI6B,KAAKC,MAAOF,EAAY5B,EAAS,M,uDAGlD,IAAD,EACwB+B,KAAKb,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ+B,KAAKT,qBACbrB,EAAU8B,KAAKJ,gCAAgC3B,EAAOH,GAE5D,OACE,oCACE,kBAAC,EAAD,CAASe,MAAM,yBACb,kBAACoB,EAAD,CACE1B,QAAS,CAAET,KAAM,OAAQC,QAAS,UAAWC,IAAK,OAClDQ,gBAAiBwB,KAAKZ,gBAG1B,kBAAC,EAAD,CAASP,MAAM,cACb,kBAAC,EAAD,CAAcI,QAAQ,oBAAoBhB,MAAOA,IACjD,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASA,U,GA7CiBgC,aCFtCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjD3C,EAAOC,QAAU,CAAC,KAAO,4B","file":"static/js/main.009eff80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__27Ury\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, posPerc }) => (\r\n  <>\r\n    {total > 0 && (\r\n      <ul className={styles.list}>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive Feedback: {posPerc}%</li>\r\n      </ul>\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  posPerc: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst ButtonControls = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onLeaveFeedback(options.good);\r\n      }}\r\n      className={styles.button}\r\n    >\r\n      Good\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onLeaveFeedback(options.neutral);\r\n      }}\r\n      className={styles.button}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onLeaveFeedback(options.bad);\r\n      }}\r\n      className={styles.button}\r\n    >\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nButtonControls.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonControls;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message, total }) => (\r\n  <>{total === 0 && <h2>{message}</h2>}</>\r\n);\r\n\r\nNotification.defaultProps = {\r\n  total: 0,\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  total: PropTypes.number,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackOptions from './Feedback/FeedbackOptions';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\n\r\nexport default class Feedback extends Component {\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleUpdate = type => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [type]: prevState[type] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((total, amount) => total + amount);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (total, posValues) => {\r\n    return total === 0 ? 0 : Math.round((posValues / total) * 100);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const posPerc = this.countPositiveFeedbackPercentage(total, good);\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={{ good: 'good', neutral: 'neutral', bad: 'bad' }}\r\n            onLeaveFeedback={this.handleUpdate}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Notification message=\"No feedback given\" total={total} />\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            posPerc={posPerc}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2YvxK\"};"],"sourceRoot":""}